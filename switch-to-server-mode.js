// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º
console.log('[SWITCH-SERVER] –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º
function switchToServerMode() {
  console.log('[SWITCH-SERVER] üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä app.py...');
  
  // 1. –û—Ç–∫–ª—é—á–∞–µ–º Service Worker
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(function(registrations) {
      for(let registration of registrations) {
        console.log('[SWITCH-SERVER] –û—Ç–∫–ª—é—á–∞–µ–º Service Worker:', registration.scope);
        registration.unregister();
      }
    });
  }
  
  // 2. –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
  window.API_BASE_URL = 'http://localhost:5000';
  
  // 3. –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º fetch –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  const originalFetch = window.fetch;
  window.fetch = function(url, options) {
    // –ï—Å–ª–∏ —ç—Ç–æ API –∑–∞–ø—Ä–æ—Å, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if (typeof url === 'string' && url.startsWith('/api/')) {
      const serverUrl = `http://localhost:5000${url}`;
      console.log('[SWITCH-SERVER] –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º API –∑–∞–ø—Ä–æ—Å:', url, '->', serverUrl);
      return originalFetch(serverUrl, options);
    }
    return originalFetch(url, options);
  };
  
  // 4. –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º XMLHttpRequest –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  const originalXHROpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function(method, url, ...args) {
    // –ï—Å–ª–∏ —ç—Ç–æ API –∑–∞–ø—Ä–æ—Å, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if (typeof url === 'string' && url.startsWith('/api/')) {
      const serverUrl = `http://localhost:5000${url}`;
      console.log('[SWITCH-SERVER] –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º XHR –∑–∞–ø—Ä–æ—Å:', url, '->', serverUrl);
      return originalXHROpen.call(this, method, serverUrl, ...args);
    }
    return originalXHROpen.call(this, method, url, ...args);
  };
  
  console.log('[SWITCH-SERVER] ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  console.log('[SWITCH-SERVER] üé≤ –í—Å–µ API –∑–∞–ø—Ä–æ—Å—ã —Ç–µ–ø–µ—Ä—å –∏–¥—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –Ω–∏–∫–Ω–µ–π–º–∞–º–∏');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–∂–∏–º
function switchToClientMode() {
  console.log('[SWITCH-SERVER] üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–∂–∏–º...');
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  if (window.originalFetch) {
    window.fetch = window.originalFetch;
  }
  if (window.originalXHROpen) {
    XMLHttpRequest.prototype.open = window.originalXHROpen;
  }
  
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker –∑–∞–Ω–æ–≤–æ
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('./mock-service-worker.js?v=16')
      .then(function(registration) {
        console.log('[SWITCH-SERVER] Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞–Ω–æ–≤–æ:', registration.scope);
      })
      .catch(function(err) {
        console.error('[SWITCH-SERVER] –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', err);
      });
  }
  
  console.log('[SWITCH-SERVER] ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.originalFetch = window.fetch;
window.originalXHROpen = XMLHttpRequest.prototype.open;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
window.switchToServerMode = switchToServerMode;
window.switchToClientMode = switchToClientMode;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º
setTimeout(() => {
  switchToServerMode();
}, 1000);

console.log('[SWITCH-SERVER] –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ switchToServerMode() –∏–ª–∏ switchToClientMode()');

