// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π Service Worker –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ API –∑–∞–ø—Ä–æ—Å–æ–≤
console.log('[MSW] Service Worker –∑–∞–≥—Ä—É–∂–µ–Ω');

// === IN-MEMORY BALANCE ===
let BALANCE = 1000; // —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å

// –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ö–æ—Å—Ç–æ–≤
const ALLOW_HOSTS = ['localhost', '127.0.0.1', 'vrtx-game-33f9.vercel.app'];

self.addEventListener('install', (event) => {
  console.log('[MSW] Service Worker: install');
  self.skipWaiting();
});

self.addEventListener('activate', (event) => {
  console.log('[MSW] Service Worker: activate');
  event.waitUntil(self.clients.claim());
});


// –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –¥–ª—è API - –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –ø–ª–æ—Å–∫–∏–µ, –±–µ–∑ –æ–±—ë—Ä—Ç–æ–∫
const mockResponses = {
  // === Profile endpoints ===
  '/api/common/profile': {
    method: 'POST',
    response: () => ({
      id: 123456,
      playerId: "123456",
      apiKey: "123456",
      playerName: 'vortex',
      name: 'vortex',
      nickname: 'vortex',
      currency: 'FUN',
      currencySign: '$',
      rounding: 2,
      balance: BALANCE, // –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏–∑ –ø–∞–º—è—Ç–∏
      sub: 'local-demo',
      token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJsb2NhbC1kZW1vIiwicGxheWVyTmFtZSI6InZvcnRleCIsImJhbGFuY2UiOjk5OTk5OTAwLCJjdXJyZW5jeSI6IkZVTiJ9.xxx'
    })
  },
  '/api/common/profile#get': {
    method: 'GET',
    response: () => ({
      id: 123456,
      playerId: "123456",
      apiKey: "123456",
      playerName: 'vortex',
      name: 'vortex',
      nickname: 'vortex',
      currency: 'FUN',
      currencySign: '$',
      rounding: 2,
      balance: BALANCE, // –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏–∑ –ø–∞–º—è—Ç–∏
      sub: 'local-demo',
      token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJsb2NhbC1kZW1vIiwicGxheWVyTmFtZSI6InZvcnRleCIsImJhbGFuY2UiOjk5OTk5OTAwLCJjdXJyZW5jeSI6IkZVTiJ9.xxx'
    })
  },

  // === Settings endpoints ===
  '/api/common/settings': {
    method: 'GET',
    response: {
      availableTranslations: ['en', 'ru'],
      forceDemoAvailable: true,
      red: [1, 2, 3, 4, 5, 6],
      green: [1, 2, 3, 4, 5, 6],
      blue: [1, 2, 3, 4, 5, 6]
    }
  },
  // === Settings endpoints ===
  // === Settings endpoints ===
'/api/games/settings': {
  method: 'GET',
  response: {
    // –í–ê–ñ–ù–û: –∫–ª—é—á–∏ –∏–º–µ–Ω–Ω–æ Symbol3/Symbol2/Symbol1 - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    Symbol3: [0, 3.9, 12.5, 28, 52, 85, 133, 200, 200],  // red
    Symbol2: [0, 2.5, 7.7, 16, 27.5, 44, 20.5], // green
    Symbol1: [0, 1.55, 4.85, 10, 7] // blue
  }
},

'/v2/api/games/settings': {
  method: 'GET',
  response: {
    // –í–ê–ñ–ù–û: –∫–ª—é—á–∏ –∏–º–µ–Ω–Ω–æ Symbol3/Symbol2/Symbol1 - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    Symbol3: [0, 3.9, 12.5, 28, 52, 85, 133, 200, 200],  // red
    Symbol2: [0, 2.5, 7.7, 16, 27.5, 44, 20.5], // green
    Symbol1: [0, 1.55, 4.85, 10, 7] // blue
  }
},

        '/api/games/config': {
          method: 'GET',
          response: {
            progressMax: 12,  // –º–∞–∫—Å–∏–º—É–º —à–∞–≥–æ–≤ –Ω–∞ –∫–æ–ª—å—Ü–æ - –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ
      spineData: [
        { id: 'Symbol1',        ring: 2 },   // blue
        { id: 'Symbol2',        ring: 1 },   // green  
        { id: 'Symbol3',        ring: 0 },   // red
        { id: 'SymbolNeutral',  ring: null },
        { id: 'SymbolLoss',     ring: 'reset' }
      ]
    }
  },

        '/v2/api/games/config': {
          method: 'GET',
          response: {
            progressMax: 12,  // –º–∞–∫—Å–∏–º—É–º —à–∞–≥–æ–≤ –Ω–∞ –∫–æ–ª—å—Ü–æ - –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ
    spineData: [
      { id: 'Symbol1',        ring: 2 },
      { id: 'Symbol2',        ring: 1 },
      { id: 'Symbol3',        ring: 0 },
      { id: 'SymbolNeutral',  ring: null },
      { id: 'SymbolLoss',     ring: 'reset' }
    ]
  }
},

  '/v2/api/games/retrieve': {
    method: 'POST',
    response: { error: 'No active games' }
  },
  '/v2/api/games/create': {
    method: 'POST',
    response: {
      roundId: 'round-1',
      state: {
        initial: true,
        collection: [0, 0, 0],
        bonusWin: 0,
        superBonus: false,
        symbol: 'SymbolNeutral',
        cashable: false
      }
    }
  },
  '/v2/api/bets/place': {
    method: 'POST',
    response: {
      state: { collection: [1, 0, 0], bonusWin: 0, superBonus: false, symbol: 'Symbol3' },
      result: 'won',
      payout: 2.5,
      coefficient: 2.5,
      autocashout: false,
      roundId: 'round-2'
    }
  },
  '/v2/api/bets/cashout': {
    method: 'POST',
    response: {
      state: { collection: [1, 1, 0], bonusWin: 0, superBonus: false, symbol: 'Symbol2' },
      result: 'won',
      payout: 3.2,
      coefficient: 3.2,
      roundId: 'round-3'
    }
  },

  // === Game endpoints ===
  '/api/games/retrieve': {
    method: 'POST',
    response: { error: 'No active games' }
  },
  '/api/games/create': {
    method: 'POST',
    response: {
      roundId: 'round-1',
      state: {
        initial: true,
        collection: [0, 0, 0],
        bonusWin: 0,
        superBonus: false,
        symbol: 'SymbolNeutral',
        cashable: false
      }
    }
  },

  // === Bet endpoints ===
  '/api/bets/place': {
    method: 'POST',
    response: {
      state: { collection: [1, 0, 0], bonusWin: 0, superBonus: false, symbol: 'Symbol3' },
      result: 'won',
      payout: 2.5,
      coefficient: 2.5,
      autocashout: false,
      roundId: 'round-2'
    }
  },
  '/api/bets/cashout': {
    method: 'POST',
    response: {
      state: { collection: [1, 1, 0], bonusWin: 0, superBonus: false, symbol: 'Symbol2' },
      result: 'won',
      payout: 3.2,
      coefficient: 3.2,
      roundId: 'round-3'
    }
  },

  // === Other endpoints ===
  '/api/common/tournaments/my': {
    method: 'GET',
    response: []
  },
  '/api/common/limits': {
    method: 'GET',
    response: {
      defaultBet: 1,
      currency: 'FUN',
      currencyId: 0,
      maxBet: 1000000,
      maxWin: 0,
      minBet: 1
    }
  },
  '/api/common/rates': {
    method: 'GET',
    response: {}
  },
  '/api/common/version/vortex': {
    method: 'GET',
    response: {
      server: {
        rng: '1.0.0',
        version: '1.0.0'
      }
    }
  },
  '/api/common/ping': {
    method: 'GET',
    response: { ok: true }
  },
  
  // === Profile update endpoint ===
  '/api/player': {
    method: 'PUT',
    response: (request) => {
      const body = request.body;
      console.log('[MSW] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:', body);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∏–∫–Ω–µ–π–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
      if (body.nickname) {
        console.log('[MSW] ‚úÖ –ù–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω:', body.nickname);
      }
      
      return {
        success: true,
        nickname: body.nickname || 'vortex',
        message: 'Profile updated successfully'
      };
    }
  },
  
  // === Alternative profile update endpoint ===
  '/api/common/profile/update': {
    method: 'POST',
    response: (request) => {
      const body = request.body;
      console.log('[MSW] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π):', body);
      
      return {
        success: true,
        nickname: body.nickname || 'vortex',
        message: 'Profile updated successfully'
      };
    }
  },
  
  // === Rules endpoints ===
  '/api/rules': {
    method: 'GET',
    response: () => {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ —Ñ–∞–π–ª–æ–≤
      const vortexRules = `–ö–∞–∫ –∏–≥—Ä–∞—Ç—å?

‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ "+" –∏ "-" –∏ –Ω–∞–∂–º–∏—Ç–µ "Spin" –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã!
‚Ä¢ –ó–∞–ø–æ–ª–Ω—è–π—Ç–µ —Å–µ–∫—Ç–æ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –û–≥–Ω—è, –ó–µ–º–ª–∏ –∏ –í–æ–¥—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞.
‚Ä¢ –ó–∞–±–µ—Ä–∏—Ç–µ –ø–æ–ª–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à, –Ω–∞–∂–∞–≤ "Cash Out", –∏–ª–∏ —á–∞—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞, –Ω–∞–∂–∞–≤ "Part PayOut".

–î–µ—Ç–∞–ª–∏ –∏–≥—Ä—ã

–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏, —Ä–µ–≥—É–ª–∏—Ä—É—è –µ—ë –∫–Ω–æ–ø–∫–∞–º–∏ "+" –∏ "-".

–°–ø–∏–Ω
–ù–∞–∂–º–∏—Ç–µ "Spin" –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.

–£–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è —Å–ø–∏–Ω–∞
–í–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ä–∞—É–Ω–¥–æ–º, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É "Spin" –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–≥—Ä—ã –≤ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã—Ö —Ä–∞—É–Ω–¥–∞—Ö –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –æ—Ç–ø—É—Å—Ç–∏—Ç–µ –µ—ë.

–ö–µ—à–∞—É—Ç
–ù–∞–∂–º–∏—Ç–µ "Cash Out" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É.

–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–µ—à–∞—É—Ç
–ù–∞–∂–º–∏—Ç–µ "Part PayOut" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–Ω–∏–º –∏ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏ –≤ –∫–∞–∂–¥–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–º –∫—Ä—É–≥–µ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. "Part PayOut" –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω —Ç–æ–ª—å–∫–æ 1 —Å–µ–∫—Ç–æ—Ä –≤ –ª—é–±–æ–º –∫—Ä—É–≥–µ. –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ "Part PayOut" –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 —Å–µ–∫—Ç–æ—Ä–∞ –≤ –æ–¥–Ω–æ–º –∫—Ä—É–≥–µ.

–¢–∞–±–ª–∏—Ü–∞ –≤—ã–ø–ª–∞—Ç
üî• –°–∏–º–≤–æ–ª –û–≥–Ω—è ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤–æ –≤–Ω–µ—à–Ω–µ–º (–∫—Ä–∞—Å–Ω–æ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x3.9, x12.5, x28, x52, x85, x133, x200, –ë–û–ù–£–°.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∫—Ä–∞—Å–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã (–û–≥–æ–Ω—å) –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –ø—Ä–∏–∑–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –í –∫–æ–Ω—Ü–µ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã –≤—Å–µ —Å–µ–≥–º–µ–Ω—Ç—ã –æ–≥–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞ —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –¥–æ 0.

üåç –°–∏–º–≤–æ–ª –ó–µ–º–ª–∏ ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º (–∑–µ–ª–µ–Ω–æ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x2.5, x7.7, x16, x27.5, x44, + x20.5 –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–µ—à–∞—É—Ç.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∑–µ–ª–µ–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã (–ó–µ–º–ª—è) –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–ø–ª–∞—Ç—É x20.5 –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –æ—Ç—Å—Ç—É–ø–∏—Ç–µ –Ω–∞ –æ–¥–∏–Ω —à–∞–≥ –Ω–∞–∑–∞–¥ –≤ –∑–µ–ª–µ–Ω–æ–º –∫–æ–ª—å—Ü–µ.

üíß –°–∏–º–≤–æ–ª –í–æ–¥—ã ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º (—Å–∏–Ω–µ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x1.55, x4.85, x10, + x7 –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–µ—à–∞—É—Ç.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —Å–∏–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä—ã (–í–æ–¥–∞) –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–ø–ª–∞—Ç—É x7.0 –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –æ—Ç—Å—Ç—É–ø–∏—Ç–µ –Ω–∞ –æ–¥–∏–Ω —à–∞–≥ –Ω–∞–∑–∞–¥ –≤ —Å–∏–Ω–µ–º –∫–æ–ª—å—Ü–µ.

üå™Ô∏è –°–∏–º–≤–æ–ª –í–µ—Ç—Ä–∞ –Ω–µ–π—Ç—Ä–∞–ª–µ–Ω –∏ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–ª—å—Ü–∞. –í—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ —Å—Ç–∞–≤–∫—É, –Ω–æ —Å–µ–∫—Ç–æ—Ä—ã –æ—Å—Ç–∞—é—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏.

üíÄ –°–∏–º–≤–æ–ª –ß–µ—Ä–µ–ø–∞ ‚Äì –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –≤—Å–µ –∫–æ–ª—å—Ü–∞ –Ω–∞–∑–∞–¥ –Ω–∞ 1 —Å–µ–≥–º–µ–Ω—Ç.

–ë–æ–Ω—É—Å–Ω–∞—è –∏–≥—Ä–∞
–ö–æ–≥–¥–∞ –≤—Å–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –±–æ–Ω—É—Å–Ω–∞—è –∏–≥—Ä–∞ —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—è–º–∏ (√ó100, √ó200, √ó300, √ó400, √ó500), –≤—Å–µ —Å —Ä–∞–≤–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø–æ—è–≤–ª–µ–Ω–∏—è.
–í –∫–æ–Ω—Ü–µ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã –≤—Å–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è, –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å–Ω—É—é –≤—ã–ø–ª–∞—Ç—É –ø–ª—é—Å —Å—É–º–º—É –∑–∞ –≤—Å–µ —Å–±—Ä–æ—à–µ–Ω–Ω—ã–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã (√ó200).

RTP
–ò–≥—Ä–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º "RTP" (–í–æ–∑–≤—Ä–∞—Ç –∏–≥—Ä–æ–∫—É), –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —Å—Ä–µ–¥–Ω–∏–º –≤—ã–ø–ª–∞—Ç –∑–∞ –º–∏–ª–ª–∏–∞—Ä–¥—ã —Ä–∞—É–Ω–¥–æ–≤. Vortex –∏–º–µ–µ—Ç RTP 93.56%‚Äì97.16%.

–ù–∞—Å—Ç—Ä–æ–π–∫–∏
–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º;
‚Ä¢ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã —Å—Ç–∞–≤–æ–∫;
‚Ä¢ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏–º–∏—Ç—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞;
‚Ä¢ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã;
‚Ä¢ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö —Å—Ç–∞–≤–æ–∫.

–ü–æ–ª–∏—Ç–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
–ú—ã –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –í–æ—Ç –∫–∞–∫ –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏:
‚Ä¢ –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –±—É–¥—É—Ç —Å–ø–∏—Å–∞–Ω—ã, –∏ –∏–≥—Ä–∞ –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è.
‚Ä¢ –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º. –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.

–í–µ—Ä—Å–∏—è
–í–µ—Ä—Å–∏—è –∏–≥—Ä—ã: "[[version]]"
–í–µ—Ä—Å–∏—è RNG: "[[rng]]"`;

      const vortexShort = `–ò—Å–ø—ã—Ç–∞–π—Ç–µ —Å–∏–ª—É –ø—Ä–∏—Ä–æ–¥—ã –≤ Vortex! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–ª—ã –û–≥–Ω—è, –ó–µ–º–ª–∏ –∏ –í–æ–¥—ã, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç!`;

      return {
        rules: vortexRules,
        rulesShort: vortexShort
      };
    }
  },
  
  '/v2/api/rules': {
    method: 'GET',
    response: () => {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ —Ñ–∞–π–ª–æ–≤
      const vortexRules = `–ö–∞–∫ –∏–≥—Ä–∞—Ç—å?

‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ "+" –∏ "-" –∏ –Ω–∞–∂–º–∏—Ç–µ "Spin" –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã!
‚Ä¢ –ó–∞–ø–æ–ª–Ω—è–π—Ç–µ —Å–µ–∫—Ç–æ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –û–≥–Ω—è, –ó–µ–º–ª–∏ –∏ –í–æ–¥—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞.
‚Ä¢ –ó–∞–±–µ—Ä–∏—Ç–µ –ø–æ–ª–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à, –Ω–∞–∂–∞–≤ "Cash Out", –∏–ª–∏ —á–∞—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞, –Ω–∞–∂–∞–≤ "Part PayOut".

–î–µ—Ç–∞–ª–∏ –∏–≥—Ä—ã

–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏, —Ä–µ–≥—É–ª–∏—Ä—É—è –µ—ë –∫–Ω–æ–ø–∫–∞–º–∏ "+" –∏ "-".

–°–ø–∏–Ω
–ù–∞–∂–º–∏—Ç–µ "Spin" –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.

–£–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è —Å–ø–∏–Ω–∞
–í–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ä–∞—É–Ω–¥–æ–º, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É "Spin" –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–≥—Ä—ã –≤ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã—Ö —Ä–∞—É–Ω–¥–∞—Ö –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –æ—Ç–ø—É—Å—Ç–∏—Ç–µ –µ—ë.

–ö–µ—à–∞—É—Ç
–ù–∞–∂–º–∏—Ç–µ "Cash Out" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É.

–ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–µ—à–∞—É—Ç
–ù–∞–∂–º–∏—Ç–µ "Part PayOut" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–Ω–∏–º –∏ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏ –≤ –∫–∞–∂–¥–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–º –∫—Ä—É–≥–µ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. "Part PayOut" –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω —Ç–æ–ª—å–∫–æ 1 —Å–µ–∫—Ç–æ—Ä –≤ –ª—é–±–æ–º –∫—Ä—É–≥–µ. –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ "Part PayOut" –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 —Å–µ–∫—Ç–æ—Ä–∞ –≤ –æ–¥–Ω–æ–º –∫—Ä—É–≥–µ.

–¢–∞–±–ª–∏—Ü–∞ –≤—ã–ø–ª–∞—Ç
üî• –°–∏–º–≤–æ–ª –û–≥–Ω—è ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤–æ –≤–Ω–µ—à–Ω–µ–º (–∫—Ä–∞—Å–Ω–æ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x3.9, x12.5, x28, x52, x85, x133, x200, –ë–û–ù–£–°.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∫—Ä–∞—Å–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã (–û–≥–æ–Ω—å) –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –ø—Ä–∏–∑–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –í –∫–æ–Ω—Ü–µ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã –≤—Å–µ —Å–µ–≥–º–µ–Ω—Ç—ã –æ–≥–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞ —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –¥–æ 0.

üåç –°–∏–º–≤–æ–ª –ó–µ–º–ª–∏ ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º (–∑–µ–ª–µ–Ω–æ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x2.5, x7.7, x16, x27.5, x44, + x20.5 –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–µ—à–∞—É—Ç.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∑–µ–ª–µ–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã (–ó–µ–º–ª—è) –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–ø–ª–∞—Ç—É x20.5 –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –æ—Ç—Å—Ç—É–ø–∏—Ç–µ –Ω–∞ –æ–¥–∏–Ω —à–∞–≥ –Ω–∞–∑–∞–¥ –≤ –∑–µ–ª–µ–Ω–æ–º –∫–æ–ª—å—Ü–µ.

üíß –°–∏–º–≤–æ–ª –í–æ–¥—ã ‚Äì –∑–∞–ø–æ–ª–Ω—è–µ—Ç 1 —Å–µ–≥–º–µ–Ω—Ç –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º (—Å–∏–Ω–µ–º) –∫–æ–ª—å—Ü–µ. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: x1.55, x4.85, x10, + x7 –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–µ—à–∞—É—Ç.
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —Å–∏–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä—ã (–í–æ–¥–∞) –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–ø–ª–∞—Ç—É x7.0 –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –æ—Ç—Å—Ç—É–ø–∏—Ç–µ –Ω–∞ –æ–¥–∏–Ω —à–∞–≥ –Ω–∞–∑–∞–¥ –≤ —Å–∏–Ω–µ–º –∫–æ–ª—å—Ü–µ.

üå™Ô∏è –°–∏–º–≤–æ–ª –í–µ—Ç—Ä–∞ –Ω–µ–π—Ç—Ä–∞–ª–µ–Ω –∏ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–ª—å—Ü–∞. –í—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ —Å—Ç–∞–≤–∫—É, –Ω–æ —Å–µ–∫—Ç–æ—Ä—ã –æ—Å—Ç–∞—é—Ç—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏.

üíÄ –°–∏–º–≤–æ–ª –ß–µ—Ä–µ–ø–∞ ‚Äì –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –≤—Å–µ –∫–æ–ª—å—Ü–∞ –Ω–∞–∑–∞–¥ –Ω–∞ 1 —Å–µ–≥–º–µ–Ω—Ç.

–ë–æ–Ω—É—Å–Ω–∞—è –∏–≥—Ä–∞
–ö–æ–≥–¥–∞ –≤—Å–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –±–æ–Ω—É—Å–Ω–∞—è –∏–≥—Ä–∞ —Å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—è–º–∏ (√ó100, √ó200, √ó300, √ó400, √ó500), –≤—Å–µ —Å —Ä–∞–≤–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø–æ—è–≤–ª–µ–Ω–∏—è.
–í –∫–æ–Ω—Ü–µ –±–æ–Ω—É—Å–Ω–æ–π –∏–≥—Ä—ã –≤—Å–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è, –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å–Ω—É—é –≤—ã–ø–ª–∞—Ç—É –ø–ª—é—Å —Å—É–º–º—É –∑–∞ –≤—Å–µ —Å–±—Ä–æ—à–µ–Ω–Ω—ã–µ –æ–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã (√ó200).

RTP
–ò–≥—Ä–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º "RTP" (–í–æ–∑–≤—Ä–∞—Ç –∏–≥—Ä–æ–∫—É), –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —Å—Ä–µ–¥–Ω–∏–º –≤—ã–ø–ª–∞—Ç –∑–∞ –º–∏–ª–ª–∏–∞—Ä–¥—ã —Ä–∞—É–Ω–¥–æ–≤. Vortex –∏–º–µ–µ—Ç RTP 93.56%‚Äì97.16%.

–ù–∞—Å—Ç—Ä–æ–π–∫–∏
–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º;
‚Ä¢ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã —Å—Ç–∞–≤–æ–∫;
‚Ä¢ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏–º–∏—Ç—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞;
‚Ä¢ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã;
‚Ä¢ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö —Å—Ç–∞–≤–æ–∫.

–ü–æ–ª–∏—Ç–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
–ú—ã –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –í–æ—Ç –∫–∞–∫ –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏:
‚Ä¢ –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –±—É–¥—É—Ç —Å–ø–∏—Å–∞–Ω—ã, –∏ –∏–≥—Ä–∞ –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è.
‚Ä¢ –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º. –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.

–í–µ—Ä—Å–∏—è
–í–µ—Ä—Å–∏—è –∏–≥—Ä—ã: "[[version]]"
–í–µ—Ä—Å–∏—è RNG: "[[rng]]"`;

      const vortexShort = `–ò—Å–ø—ã—Ç–∞–π—Ç–µ —Å–∏–ª—É –ø—Ä–∏—Ä–æ–¥—ã –≤ Vortex! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–ª—ã –û–≥–Ω—è, –ó–µ–º–ª–∏ –∏ –í–æ–¥—ã, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç!`;

      return {
        rules: vortexRules,
        rulesShort: vortexShort
      };
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è JSON –æ—Ç–≤–µ—Ç–∞
function createJsonResponse(data, status = 200) {
  return new Response(JSON.stringify(data), {
    status: status,
    headers: {
      'Content-Type': 'application/json',
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
// --- –î–û–ë–ê–í–¨ –≤—Å–ø–æ–º–æ–≥–∞–ª–∫–∏ –≤—ã—à–µ ---
function thinArray(arr, step = 2) {
  // –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π step-–π —ç–ª–µ–º–µ–Ω—Ç: 0, step, 2*step, ...
  return Array.isArray(arr) ? arr.filter((_, i) => i % step === 0) : arr;
}
function thinSymbols(payload, density = { Symbol1: 2, Symbol2: 2, Symbol3: 2 }) {
  const out = { ...payload };
  for (const [key, val] of Object.entries(payload)) {
    if (/^Symbol[123]$/.test(key)) {
      // –µ—Å–ª–∏ —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫/—á–∏—Å–µ–ª ‚Äì –ø—Ä–æ—Å—Ç–æ —Ä–µ–∂–µ–º
      if (Array.isArray(val)) out[key] = thinArray(val, density[key] || 2);
      // –µ—Å–ª–∏ –≤ —Ç–≤–æ–µ–π —Å—Ö–µ–º–µ SymbolN ‚Äî –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏, –∏—â–µ–º –ø–æ–ª–µ —Å –ø–æ–¥–ø–∏—Å—è–º–∏
      else if (val && typeof val === 'object') {
        const clone = { ...val };
        if (Array.isArray(val.labels)) clone.labels = thinArray(val.labels, density[key] || 2);
        if (Array.isArray(val.ticks))  clone.ticks  = thinArray(val.ticks, density[key] || 2);
        out[key] = clone;
      }
    }
  }
  return out;
}

function forceTicks(payload, fixed = 12) {
  const out = { ...payload };
  for (const key of ['Symbol1','Symbol2','Symbol3']) {
    if (Array.isArray(out[key])) {
      // –ª–∏–±–æ —É—Ä–µ–∑–∞–µ–º, –ª–∏–±–æ –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–æ fixed
      const arr = out[key].slice(0, fixed);
      while (arr.length < fixed) arr.push(arr[arr.length-1] ?? 1);
      out[key] = arr;
    }
  }
  return out;
}

// ==== GAME STATE (–≥–ª–æ–±–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è–ª–æ—Å—å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏) ====
const RINGS = { red: 0, green: 1, blue: 2 };
const MAX_STEP = 5; // –¥–ª—è Symbol1 –∏ Symbol2
const MAX_STEP_SYMBOL3 = 8; // –¥–ª—è Symbol3 (–∫—Ä–∞—Å–Ω–æ–µ –∫–æ–ª—å—Ü–æ) - –±–æ–ª—å—à–µ —à–∞–≥–æ–≤
const SYMBOLS = ['Symbol1', 'Symbol2', 'Symbol3', 'SymbolNeutral', 'SymbolLoss'];

function clamp(x, lo, hi) { return Math.min(Math.max(x, lo), hi); }
function pickSymbol() { 
  // –í–∑–≤–µ—à–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –∏–≥—Ä—ã
  const weights = {
    'Symbol1': 0.20,    // 20% - —Å–∏–Ω–∏–π
    'Symbol2': 0.20,    // 20% - –∑–µ–ª–µ–Ω—ã–π  
    'Symbol3': 0.20,    // 20% - –∫—Ä–∞—Å–Ω—ã–π
    'SymbolNeutral': 0.15, // 15% - –Ω–µ–π—Ç—Ä–∞–ª—å (–ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞)
    'SymbolLoss': 0.25  // 25% - —á–µ—Ä–µ–ø (–ø—Ä–æ–∏–≥—Ä—ã—à) - –£–í–ï–õ–ò–ß–ò–õ–ò!
  };
  
  const rand = Math.random();
  let cumulative = 0;
  
  for (const [symbol, weight] of Object.entries(weights)) {
    cumulative += weight;
    if (rand <= cumulative) {
      return symbol;
    }
  }
  
  // Fallback –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏
  return 'SymbolNeutral';
}

let lastState = {
  initial: true,
  collection: [0,0,0],
  bonusWin: 0,
  superBonus: false,
  symbol: 'SymbolNeutral',
  cashable: false
};
let roundCounter = 1;

// üëâ –ù–û–í–û–ï: —Å—Ç–µ–∫ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤ (Symbol1/2/3)
let historySymbols = [];  // –Ω–∞–ø—Ä–∏–º–µ—Ä: ['Symbol3','Symbol2',...]

function applySymbol(prev, sym) {
  const col = prev.collection.slice();
  let bonusAmount = 0; // —Å—É–º–º–∞ –±–æ–Ω—É—Å–∞ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è

  switch (sym) {
    case 'Symbol1': // BLUE -> –∏–Ω–¥–µ–∫—Å 2
      const newBlueValue = clamp(col[RINGS.blue] + 1, 0, MAX_STEP);
      col[RINGS.blue] = newBlueValue;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã –±–æ–Ω—É—Å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç = 7)
      if (newBlueValue === MAX_STEP) {
        bonusAmount = 7; // +7 –±–æ–Ω—É—Å
        console.log('[MSW] üéâ –ë–û–ù–£–°! Symbol1 –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞—á–∏—Å–ª—è–µ–º +7 –∫ –±–∞–ª–∞–Ω—Å—É');
      }
      break;
      
    case 'Symbol2': // GREEN -> –∏–Ω–¥–µ–∫—Å 1
      const newGreenValue = clamp(col[RINGS.green] + 1, 0, MAX_STEP);
      col[RINGS.green] = newGreenValue;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã –±–æ–Ω—É—Å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç = 20.5)
      if (newGreenValue === MAX_STEP) {
        bonusAmount = 20.5; // +20.5 –±–æ–Ω—É—Å
        console.log('[MSW] üéâ –ë–û–ù–£–°! Symbol2 –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞—á–∏—Å–ª—è–µ–º +20.5 –∫ –±–∞–ª–∞–Ω—Å—É');
      }
      break;
      
    case 'Symbol3': // RED -> –∏–Ω–¥–µ–∫—Å 0
      const newRedValue = clamp(col[RINGS.red] + 1, 0, MAX_STEP_SYMBOL3);
      col[RINGS.red] = newRedValue;
      
      // Symbol3 –º–æ–∂–µ—Ç –¥–æ—Ö–æ–¥–∏—Ç—å –¥–æ 8 —à–∞–≥–æ–≤ (–¥–æ 200x)
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
      if (newRedValue === MAX_STEP_SYMBOL3) {
        bonusAmount = 200; // +200 –±–æ–Ω—É—Å –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –º–∞–∫—Å–∏–º—É–º–∞
        console.log('[MSW] üéâ –ë–û–ù–£–°! Symbol3 –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞—á–∏—Å–ª—è–µ–º +200 –∫ –±–∞–ª–∞–Ω—Å—É');
      }
      break;
    case 'SymbolNeutral':
      // –ù–µ–π—Ç—Ä–∞–ª—å: –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –Ω–æ –∏ –Ω–µ –æ–±–Ω—É–ª—è–µ–º –∏–≥—Ä—É
      // –ï—Å–ª–∏ –∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å (–µ—Å—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å), —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ö–æ–¥
      console.log('‚ö™ [MSW] SymbolNeutral: –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞, –∫–æ–ª–ª–µ–∫—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è:', prev.collection);
      if (prev.initial && col.every(v => v === 0)) {
        // –ï—Å–ª–∏ –∏–≥—Ä–∞ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å - –æ—Å—Ç–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        return {
          initial: true,
          collection: prev.collection.slice(),
          bonusWin: 0,
          superBonus: false,
          symbol: 'SymbolNeutral',
          cashable: false
        };
      }
      // –ï—Å–ª–∏ –∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ö–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
      return {
        initial: false,
        collection: prev.collection.slice(),
        bonusWin: 0,
        superBonus: false,
        symbol: 'SymbolNeutral',
        cashable: prev.cashable
      };
    case 'SymbolLoss': // —á–µ—Ä–µ–ø -> —à–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1 –¥–ª—è –≤—Å–µ—Ö –∫–æ–ª–µ—Ü
      // –®–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1 –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ù–ï —Ç—Ä–æ–≥–∞–µ–º –±–∞–ª–∞–Ω—Å)
      const before = [...col];
      col = col.map(v => typeof v === 'number' ? Math.max(0, v - 1) : v);
      
      console.log('üíÄ [MSW] –ß–ï–†–ï–ü –≤ applySymbol ‚Äî —à–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1. –ë—ã–ª–æ:', before, '–°—Ç–∞–ª–æ:', col);
      
      return {
        initial: col.every(v => v === 0), // initial —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –∫–æ–ª—å—Ü–∞ –Ω–∞ 0
        collection: col,
        bonusWin: 0,
        superBonus: false,
        symbol: 'SymbolLoss', // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–ø
        cashable: col.some(v => v > 0) // –∫—ç—à–∞—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
      };
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å –±–æ–Ω—É—Å - –Ω–∞—á–∏—Å–ª—è–µ–º –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
  if (bonusAmount > 0) {
    BALANCE += bonusAmount;
    console.log(`[MSW] üí∞ –ù–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å ${bonusAmount}, –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${BALANCE}`);
  }

  // –î–ª—è Symbol1, Symbol2, Symbol3 - –æ–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞
  const hasProgress = col.some(v => v > 0);
  return {
    initial: !hasProgress ? prev.initial : false, // –µ—Å–ª–∏ –ø–æ—à—ë–ª –ø—Ä–æ–≥—Ä–µ—Å—Å ‚Äî —Å—Ç–∞—Ä—Ç–∞ —É–∂–µ –Ω–µ—Ç
    collection: col,
    bonusWin: bonusAmount, // –ø–µ—Ä–µ–¥–∞–µ–º –±–æ–Ω—É—Å –≤ –æ—Ç–≤–µ—Ç–µ
    superBonus: false,
    symbol: sym,
    cashable: hasProgress // –∫—ç—à–∞—É—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—å 1 —à–∞–≥
  };
}
// ==== /GAME STATE ====

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–ª–µ—Ü
function calculateCoefficientFromRings(collection) {
  const coeffs = {
    Symbol1: [0, 1.55, 4.85, 10, 7],      // blue (ring 2)
    Symbol2: [0, 2.5, 7.7, 16, 27.5, 44, 20.5], // green (ring 1)  
    Symbol3: [0, 3.9, 12.5, 28, 52, 85, 133, 200, 200] // red (ring 0)
  };
  
  let totalCoeff = 0;
  
  // collection[0] = red ring (Symbol3)
  // collection[1] = green ring (Symbol2) 
  // collection[2] = blue ring (Symbol1)
  
  if (collection[0] > 0 && collection[0] < coeffs.Symbol3.length) {
    totalCoeff += coeffs.Symbol3[collection[0]];
  }
  if (collection[1] > 0 && collection[1] < coeffs.Symbol2.length) {
    totalCoeff += coeffs.Symbol2[collection[1]];
  }
  if (collection[2] > 0 && collection[2] < coeffs.Symbol1.length) {
    totalCoeff += coeffs.Symbol1[collection[2]];
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ –∫–æ–ª—å—Ü–∞—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
  return totalCoeff > 0 ? totalCoeff : 1.01;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ fetch
self.addEventListener('fetch', (event) => {
  const url = new URL(event.request.url);
  const pathname = url.pathname;
  const method = event.request.method.toUpperCase();
  

  

  // ==== DYNAMIC GAME MOCKS: –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ, —á–µ—Ä–µ–ø = —Å–±—Ä–æ—Å ====

// CREATE ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if ((pathname === '/api/games/create' || pathname === '/v2/api/games/create') &&
        method === 'POST') {
      roundCounter = 1;
      lastState = {
        initial: true,
        collection: [0, 0, 0],
        bonusWin: 0,
        superBonus: false,
        symbol: 'SymbolNeutral',
        cashable: false
      };
      event.respondWith(createJsonResponse({ roundId: `round-${roundCounter}`, state: lastState }));
      return;
    }

    // PLACE (spin) ‚Äî –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª –°–†–ê–ó–£ + —Å–ø–∏—Å—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å
    if ((pathname === '/api/bets/place' || pathname === '/v2/api/bets/place') &&
        method === 'POST') {
      event.respondWith((async () => {
        const body = await event.request.clone().json().catch(() => ({}));
        const amount = Number(body.amount || 0);

        if (!isNaN(amount) && amount > 0) {
          BALANCE -= amount;
          console.log('[MSW] –°–ø–∏—Å–∞–Ω–∏–µ:', amount, '–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', BALANCE);
        }

        // –∫—Ä—É—Ç–∏–º —Å–∏–º–≤–æ–ª
        const sym = pickSymbol();
        console.log('[MSW] –í—ã–ø–∞–ª —Å–∏–º–≤–æ–ª:', sym, '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', lastState.collection);
        
        // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤
        if (sym === 'SymbolNeutral') {
          console.log('‚ö™ [MSW] –ù–ï–ô–¢–†–ê–õ–¨ - –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞, –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è');
        } else if (sym === 'SymbolLoss') {
          console.log('üíÄ [MSW] –ß–ï–†–ï–ü - –∏–≥—Ä–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è!');
        } else {
          console.log('üéØ [MSW] –¶–í–ï–¢–ù–û–ô –°–ò–ú–í–û–õ - –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–æ–ª—å—Ü–∞–º');
        }

        // ==== –ï—Å–ª–∏ –≤—ã–ø–∞–ª –ß–ï–†–ï–ü ‚Äî —à–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1 –¥–ª—è –≤—Å–µ—Ö –∫–æ–ª–µ—Ü ====
        if (sym === 'SymbolLoss') {
          // –ß–µ—Ä–µ–ø: —à–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1 –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ù–ï —Ç—Ä–æ–≥–∞–µ–º –±–∞–ª–∞–Ω—Å, –Ω–µ –¥–∞—ë–º –æ—Ç–∫–∞—Ç)
          const before = Array.isArray(lastState.collection) ? [...lastState.collection] : [0, 0, 0];

          const newCollection = (lastState.collection || [0, 0, 0]).map(v =>
            typeof v === 'number' ? Math.max(0, v - 1) : v
          );

          // –î–µ–Ω–µ–∂–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã = 0
          const payout = 0;
          const coefficient = 0;

          console.log('üíÄ [MSW] –ß–ï–†–ï–ü ‚Äî —à–∞–≥ –Ω–∞–∑–∞–¥ –Ω–∞ 1. –ë—ã–ª–æ:', before, '–°—Ç–∞–ª–æ:', newCollection);

          roundCounter += 1;
          lastState = {
            initial: newCollection.every(v => v === 0), // initial —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –∫–æ–ª—å—Ü–∞ –Ω–∞ 0
            collection: newCollection,
            bonusWin: 0,
            superBonus: false,
            symbol: 'SymbolLoss', // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–ø –∫–∞–∫ —Å–∏–º–≤–æ–ª
            cashable: newCollection.some(v => v > 0) // –∫—ç—à–∞—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
          };

          return createJsonResponse({
            state: lastState,
            result: 'lose',
            payout: payout,
            coefficient: coefficient,
            autocashout: false,
            roundId: `round-${roundCounter}`
          });
        }

        // –æ–±—ã—á–Ω—ã–π —Å–∏–º–≤–æ–ª ‚Äî –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –¥–æ—Ä–æ–∂–∫–∏ –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –∫—ç—à–∞—É—Ç
        roundCounter += 1;
        lastState = applySymbol(lastState, sym);

        // –ø–∏—à–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤
        if (sym === 'Symbol1' || sym === 'Symbol2' || sym === 'Symbol3') {
          historySymbols.push(sym);
        }

        lastState = { ...lastState, cashable: true };

        return createJsonResponse({
          state: lastState,
          result: Math.random() < 0.5 ? 'won' : 'lose',
          payout: +(Math.random() * 5).toFixed(2),
          coefficient: +(1 + Math.random() * 4).toFixed(2),
          autocashout: false,
          roundId: `round-${roundCounter}`
        });
      })());
      return;
    }

            if ((pathname === '/api/bets/cashout' || pathname === '/v2/api/bets/cashout') &&
                method === 'POST') {
              event.respondWith((async () => {
                const body = await event.request.clone().json().catch(() => ({}));
                const isPartial = Boolean(body.partial);

                // === –ß–ê–°–¢–ò–ß–ù–´–ô –ö–≠–®–ê–£–¢ (–∫–Ω–æ–ø–∫–∞ "-1") ===
                if (isPartial) {
                  // 1) –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –Ω–µ–ø—É—Å—Ç—É—é –¥–æ—Ä–æ–∂–∫—É –Ω–∞ -1
                  const col = (lastState?.collection || [0,0,0]).slice();
                  const before = [...col];
                  let decremented = 0;
                  for (let i = 0; i < col.length; i++) {
                    if (col[i] > 0) {
                      col[i] -= 1;
                      decremented++;
                    }
                  }

                  // –ï—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ—á–µ–≥–æ –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—ë–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ –≤—ã–ø–ª–∞—Ç—ã
                  if (decremented === 0) {
                    return createJsonResponse({
                      state: lastState,
                      result: 'won',
                      payout: 0,
                      coefficient: +(1 + Math.random()).toFixed(2),
                      roundId: `round-${roundCounter}`,
                      partial: true
                    });
                  }

                  // 2) –ß–∏—Å—Ç–∏–º —Å—Ç–µ–∫ –∏—Å—Ç–æ—Ä–∏–∏ (—á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∏–π -1 –Ω–µ "—É–µ–∑–∂–∞–ª" –¥–∞–ª—å—à–µ)
                  historySymbols = [];

                  // 3) –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –ù–ï –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—É–Ω–¥!
                  lastState = {
                    ...(lastState || {}),
                    collection: col,
                    symbol: 'SymbolNeutral',        // –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª –¥–ª—è UI
                    cashable: col.some(v => v > 0), // –∫—ç—à–∞—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å —à–∞–≥–∏
                    initial: col.every(v => v === 0) // –µ—Å–ª–∏ –≤—Å—ë –æ–±–Ω—É–ª–∏–ª–∏ ‚Äî —Å–Ω–æ–≤–∞ initial
                  };

                  // 4) –°—á–∏—Ç–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–ª–µ—Ü
                  const coefficient = calculateCoefficientFromRings(col);
                  
                  // 5) –°—á–∏—Ç–∞–µ–º Payout –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Å—Ç–∞–≤–∫—É 1)
                  const betAmount = 1; // –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –∑–∞–ø—Ä–æ—Å–∞, –Ω–æ –ø–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ–º
                  const payout = +(betAmount * coefficient).toFixed(2);

                  // 6) –ù–∞—á–∏—Å–ª—è–µ–º –≤ –±–∞–ª–∞–Ω—Å
                  BALANCE += payout;
                  console.log('[MSW][PARTIAL CASHOUT -1] ', before, ' => ', col, ' | coefficient:', coefficient, ' payout:', payout, ' balance:', BALANCE);

                  // roundCounter –ù–ï —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º ‚Äî —ç—Ç–æ —Ç–æ—Ç –∂–µ —Ä–∞—É–Ω–¥
                  return createJsonResponse({
                    state: lastState,
                    result: 'won',
                    payout,
                    coefficient: coefficient,
                    roundId: `round-${roundCounter}`,
                    partial: true
                  });
                }

                // === –ü–û–õ–ù–´–ô –ö–≠–®–ê–£–¢ (–æ–±—ã—á–Ω—ã–π Cashout) ===
                // –°—á–∏—Ç–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–ª–µ—Ü
                const coefficient = calculateCoefficientFromRings(lastState.collection);
                const betAmount = 1; // –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –∑–∞–ø—Ä–æ—Å–∞, –Ω–æ –ø–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ–º
                const payout = +(betAmount * coefficient).toFixed(2);
                
                BALANCE += payout;
                console.log('[MSW] –ó–∞—á–∏—Å–ª–µ–Ω–∏–µ (FULL CASHOUT): coefficient:', coefficient, ' payout:', payout, '–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', BALANCE);

                roundCounter += 1;

                // –ü–æ–ª–Ω—ã–π —Ä–µ—Å—Ç–∞—Ä—Ç —Ä–∞—É–Ω–¥–∞
                lastState = {
                  initial: true,
                  collection: [0,0,0],
                  bonusWin: 0,
                  superBonus: false,
                  symbol: 'SymbolNeutral',
                  cashable: false
                };
                historySymbols = [];

                return createJsonResponse({
                  state: lastState,
                  result: 'won',
                  payout,
                  coefficient: coefficient,
                  roundId: `round-${roundCounter}`,
                  partial: false
                });
              })());
              return;
            }


// ==== /DYNAMIC GAME MOCKS ====




  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
  if (pathname.includes('/api/')) {
    console.log('[MSW] API –∑–∞–ø—Ä–æ—Å:', pathname, '–ú–µ—Ç–æ–¥:', method);
  }

  // 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–π –º–æ–∫ –¥–ª—è –ø—É—Ç–∏ –∏ –º–µ—Ç–æ–¥–∞
  let mockData = mockResponses[pathname];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–æ–≤
  if (!mockData && method === 'GET') {
    mockData = mockResponses[pathname + '#get'];
  }

  if (mockData && mockData.method === method) {
    console.log('[MSW] –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫ –¥–ª—è:', pathname);
    let response = typeof mockData.response === 'function' ? mockData.response() : mockData.response;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è /api/games/settings
    if (pathname === '/api/games/settings' || pathname === '/v2/api/games/settings') {
      // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª—å—Ü–∞—Ö
      // const step = Number(url.searchParams.get('thin') || 2);
      // response = thinSymbols(response, { 
      //   Symbol1: step, // –≤–Ω–µ—à–Ω–∏–π ‚Äì –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π step-–π —ç–ª–µ–º–µ–Ω—Ç
      //   Symbol2: step, // —Å—Ä–µ–¥–Ω–∏–π ‚Äì —Ç–æ–∂–µ –∫–∞–∂–¥—ã–π step-–π —ç–ª–µ–º–µ–Ω—Ç  
      //   Symbol3: step  // –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ‚Äì –∫–∞–∂–¥—ã–π step-–π —ç–ª–µ–º–µ–Ω—Ç
      // });
      
      // –ñ—ë—Å—Ç–∫–æ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª–µ–Ω–∏–π
      const fixed = Number(url.searchParams.get('fixed') || 0);
      if (fixed > 0) {
        response = forceTicks(response, fixed);
        console.log('[MSW] –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ', fixed, '–¥–µ–ª–µ–Ω–∏–π');
      }
    }
    
    event.respondWith(createJsonResponse(response));
    return;
  }

  // 2) –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
  if (pathname.includes('/api/translates/') && pathname.includes('/latest/')) {
    const translations = {
      "COMMON.PLEASE_LOGIN": "PLEASE LOGIN",
      "GAME.SPIN": "SPIN",
      "GAME.CASHOUT": "CASHOUT",
      "GAME.BET": "BET",
      "GAME.BALANCE": "BALANCE",
      "GAME.WIN": "WIN",
      "GAME.LOSE": "LOSE",
      "ELEMENTS.FIRE": "FIRE",
      "ELEMENTS.EARTH": "EARTH",
      "ELEMENTS.WATER": "WATER"
    };
    event.respondWith(createJsonResponse(translations));
    return;
  }

  // 3) –†–∞–∑—Ä–µ—à–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  if (pathname.endsWith('.css') ||
    pathname.endsWith('.js') ||
    pathname.endsWith('.png') ||
    pathname.endsWith('.jpg') ||
    pathname.endsWith('.jpeg') ||
    pathname.endsWith('.gif') ||
    pathname.endsWith('.svg') ||
    pathname.endsWith('.webp') ||
    pathname.endsWith('.mp3') ||
    pathname.endsWith('.wav') ||
    pathname.endsWith('.ogg') ||
    pathname.endsWith('.atlas') ||
    pathname.endsWith('.json') ||
    pathname.endsWith('.woff') ||
    pathname.endsWith('.woff2') ||
    pathname.endsWith('.ttf') ||
    pathname.endsWith('.eot') ||
    pathname.includes('css2') ||
    pathname.includes('static/') ||
    pathname.includes('modules/') ||
    pathname === '/css2') {
    event.respondWith(fetch(event.request));
    return;
  }

  // 4) –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ö–æ—Å—Ç –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)
  if (!ALLOW_HOSTS.includes(url.hostname)) {
    console.log('[MSW] –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–π –∑–∞–ø—Ä–æ—Å:', url.hostname);
    event.respondWith(createJsonResponse({ error: 'External request blocked' }, 403));
    return;
  }

  // 5) –õ–æ–≥–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ –º–æ–∫–∞
  if (pathname.includes('/api/')) {
    console.log('[MSW] ‚ö†Ô∏è API –∑–∞–ø—Ä–æ—Å –±–µ–∑ –º–æ–∫–∞:', pathname, '–ú–µ—Ç–æ–¥:', method);
  }

  // 6) –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤ —Å–µ—Ç—å
  event.respondWith(fetch(event.request));
});
