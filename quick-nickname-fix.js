// –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∏–∫–Ω–µ–π–º–æ–º
console.log('[QUICK-NICKNAME-FIX] –ó–∞–≥—Ä—É–∂–∞–µ–º –±—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');

function quickFixNickname() {
  console.log('[QUICK-NICKNAME-FIX] üîß –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
  
  const nickname = 'vortex';
  
  // 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ localStorage
  console.log('[QUICK-NICKNAME-FIX] üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ localStorage...');
  localStorage.setItem('nickname', nickname);
  localStorage.setItem('playerName', nickname);
  localStorage.setItem('name', nickname);
  localStorage.setItem('player_name', nickname);
  localStorage.setItem('user_name', nickname);
  
  // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ sessionStorage
  console.log('[QUICK-NICKNAME-FIX] üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ sessionStorage...');
  sessionStorage.setItem('nickname', nickname);
  sessionStorage.setItem('playerName', nickname);
  sessionStorage.setItem('name', nickname);
  sessionStorage.setItem('player_name', nickname);
  sessionStorage.setItem('user_name', nickname);
  
  // 3. –û–±–Ω–æ–≤–ª—è–µ–º JWT —Ç–æ–∫–µ–Ω
  console.log('[QUICK-NICKNAME-FIX] üîë –û–±–Ω–æ–≤–ª—è–µ–º JWT —Ç–æ–∫–µ–Ω...');
  const currentToken = localStorage.getItem('token');
  if (currentToken) {
    try {
      const parts = currentToken.split('.');
      if (parts.length === 3) {
        const payload = JSON.parse(atob(parts[1]));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è –Ω–∏–∫–Ω–µ–π–º–∞
        payload.nickname = nickname;
        payload.name = nickname;
        payload.playerName = nickname;
        payload.player_name = nickname;
        payload.user_name = nickname;
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        const newToken = parts[0] + '.' + btoa(JSON.stringify(payload)) + '.' + parts[2];
        localStorage.setItem('token', newToken);
        
        console.log('[QUICK-NICKNAME-FIX] ‚úÖ JWT —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω');
      }
    } catch (e) {
      console.log('[QUICK-NICKNAME-FIX] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞:', e);
    }
  }
  
  // 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö
  console.log('[QUICK-NICKNAME-FIX] üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö...');
  const globalKeys = Object.keys(window);
  for (const key of globalKeys) {
    try {
      const obj = window[key];
      if (obj && typeof obj === 'object') {
        if (obj.profile && typeof obj.profile === 'object') {
          if (obj.profile.name !== undefined) {
            obj.profile.name = nickname;
          }
          if (obj.profile.nickname !== undefined) {
            obj.profile.nickname = nickname;
          }
        }
        if (obj.nickname !== undefined) {
          obj.nickname = nickname;
        }
        if (obj.name !== undefined && typeof obj.name === 'string') {
          obj.name = nickname;
        }
      }
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    }
  }
  
  // 5. –ò—â–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã
  console.log('[QUICK-NICKNAME-FIX] üé® –ò—â–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã...');
  const uiSelectors = [
    'input[placeholder*="Nickname"]',
    'input[placeholder*="nickname"]', 
    'input[name*="nickname"]',
    'input[id*="nickname"]',
    'input[class*="nickname"]',
    'input[type="text"]'
  ];
  
  let foundUIElements = 0;
  uiSelectors.forEach(selector => {
    const elements = document.querySelectorAll(selector);
    elements.forEach(element => {
      // –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—è –¥–ª—è —Å—Ç–∞–≤–æ–∫
      if (!element.classList.contains('amount__input') && 
          !element.classList.contains('bet__input') &&
          !element.id.includes('amount') &&
          !element.id.includes('bet') &&
          element.placeholder !== 'Amount' &&
          element.placeholder !== 'Bet') {
        
        element.value = nickname;
        element.readOnly = false;
        element.disabled = false;
        element.style.borderColor = '';
        element.style.backgroundColor = '';
        element.classList.remove('error', 'invalid', 'has-error');
        
        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏—è
        element.dispatchEvent(new Event('input', { bubbles: true }));
        element.dispatchEvent(new Event('change', { bubbles: true }));
        element.dispatchEvent(new Event('blur', { bubbles: true }));
        
        foundUIElements++;
        console.log('[QUICK-NICKNAME-FIX] ‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω UI —ç–ª–µ–º–µ–Ω—Ç:', element);
      }
    });
  });
  
  if (foundUIElements === 0) {
    console.log('[QUICK-NICKNAME-FIX] ‚ö†Ô∏è UI —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
  
  // 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º API –∑–∞–ø—Ä–æ—Å
  console.log('[QUICK-NICKNAME-FIX] üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º API –∑–∞–ø—Ä–æ—Å...');
  const xhr = new XMLHttpRequest();
  xhr.open('PUT', '/api/player', true);
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.setRequestHeader('Authorization', 'Bearer ' + (localStorage.getItem('token') || 'demo_token'));
  
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4) {
      if (xhr.status === 200) {
        console.log('[QUICK-NICKNAME-FIX] ‚úÖ API –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω');
      } else {
        console.log('[QUICK-NICKNAME-FIX] ‚ö†Ô∏è –û—à–∏–±–∫–∞ API:', xhr.status, xhr.responseText);
      }
    }
  };
  
  xhr.send(JSON.stringify({ nickname: nickname }));
  
  console.log('[QUICK-NICKNAME-FIX] ‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
window.quickFixNickname = quickFixNickname;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
setTimeout(() => {
  console.log('[QUICK-NICKNAME-FIX] üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
  quickFixNickname();
}, 1000);

console.log('[QUICK-NICKNAME-FIX] –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ quickFixNickname() –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.');

