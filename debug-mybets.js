// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ MyBets API
console.log('üîç –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏ MyBets API...');

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ fetch –∑–∞–ø—Ä–æ—Å—ã
const originalFetch = window.fetch;
window.fetch = function(...args) {
  const url = args[0];
  console.log('üåê Fetch –∑–∞–ø—Ä–æ—Å:', url);
  
  return originalFetch.apply(this, args)
    .then(response => {
      if (url.includes('/api/common/bets/my')) {
        console.log('‚úÖ MyBets API –æ—Ç–≤–µ—Ç:', response.status, response.statusText);
        response.clone().json().then(data => {
          console.log('üìä MyBets –¥–∞–Ω–Ω—ã–µ:', data);
        }).catch(e => {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ MyBets –¥–∞–Ω–Ω—ã—Ö:', e);
        });
      }
      return response;
    })
    .catch(error => {
      if (url.includes('/api/common/bets/my')) {
        console.log('‚ùå MyBets API –æ—à–∏–±–∫–∞:', error);
      }
      throw error;
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MyBets API
window.testMyBetsAPI = async function() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º MyBets API...');
  
  try {
    const response = await fetch('/api/common/bets/my?gameId=vortex&limit=10&offset=0');
    console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', data.length, '—Å—Ç–∞–≤–æ–∫');
      console.log('üìã –ü–µ—Ä–≤–∞—è —Å—Ç–∞–≤–∫–∞:', data[0]);
      return data;
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ HTTP:', response.status, response.statusText);
      const errorText = await response.text();
      console.log('üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
    }
  } catch (error) {
    console.log('üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Service Worker
window.checkServiceWorker = function() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(registrations => {
      console.log('üîß –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Service Workers:', registrations.length);
      registrations.forEach((registration, index) => {
        console.log(`SW ${index + 1}:`, registration.scope);
      });
    });
  } else {
    console.log('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Service Worker
window.updateServiceWorker = function() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(registrations => {
      registrations.forEach(registration => {
        registration.update().then(() => {
          console.log('üîÑ Service Worker –æ–±–Ω–æ–≤–ª–µ–Ω');
        });
      });
    });
  }
};

console.log('‚úÖ –û—Ç–ª–∞–¥–∫–∞ MyBets API –≥–æ—Ç–æ–≤–∞!');
console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
console.log('  - testMyBetsAPI() - —Ç–µ—Å—Ç API');
console.log('  - checkServiceWorker() - –ø—Ä–æ–≤–µ—Ä–∫–∞ SW');
console.log('  - updateServiceWorker() - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SW');
